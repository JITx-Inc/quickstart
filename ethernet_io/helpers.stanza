; ====================
; A number of helpful functions to check your designs, export to CAD,
; update your design in CAD, etc.
; ====================
#use-added-syntax(jitx)
defpackage helpers :
  import core
  import jitx
  import jitx/commands
  import jitx/parts

jsl/design/settings/OPERATING-TEMPERATURE = min-max(0.0 50.0)

public var res-query
public var cap-query

public defn setup-part-query (--
                              vendors:Tuple<String|AuthorizedVendor> = jsl/design/settings/APPROVED-DISTRIBUTOR-LIST
                             ) :

  var general-query = BaseQuery(sellers! = vendors)
  var smd-query = add(general-query,
                        mounting = "smd"
                        case = valid-smd-pkgs("0402"),
                        operating-temperature = jsl/design/settings/OPERATING-TEMPERATURE
                      )
  res-query = ResistorQuery(smd-query)
  cap-query = CapacitorQuery(smd-query,
                              type = "ceramic",
                              temperature-coefficient_code = ["X7R" "X5R"],
                              rated-voltage = 6.0,
                            )
; ============
; setup-design
; ============
public defn setup-design (name:String, board:Board
                          --
                          rules:Rules|False = false
                          vendors:Tuple<String|AuthorizedVendor> = ocdb/utils/design-vars/APPROVED-DISTRIBUTOR-LIST
                          quantity:Int = ocdb/utils/design-vars/DESIGN-QUANTITY
                          bom-columns:Tuple<BOMColumn> = ocdb/utils/design-vars/BOM-COLUMNS
                          paper-size:Paper = ISO-A4
                          ) :
  set-current-design(name)
  setup-part-query(vendors = vendors)
  set-board(board)
  match(rules:Rules) : (set-rules(rules))
  set-bom-vendors(vendors)
  set-bom-design-quantity(quantity)
  set-bom-columns(bom-columns)
  set-paper(paper-size)

  set-use-layout-groups()
  set-export-backend(`altium) ; set the CAD software for export to be altium (also supported: `kicad)

; =====================
; Run the design checks
; =====================
public defn run-check-on-design (circuit:Instantiable) :
  val main-module = ocdb/utils/generator-utils/run-final-passes(circuit) ; Analyze design with a pass
  set-main-module(main-module) ; Treat the provided module as a design, and compile it.
  run-checks("checks.txt")

; ====================
; Actual Export design
; ====================
public defn export-to-cad () :
  export-cad([
    "vendor_part_numbers.lcsc" => "LCSC"
  ])

; ====================
; Export design to CAD
; ====================
public defn export-design () :
  set-export-board?(true)
  export-to-cad()

; ===================================
; Update CAD, keeping layout progress
; ===================================
public defn update-design () :
  set-export-board?(false)
  export-to-cad()

; =================
; Export BOM to tsv
; =================
public defn export-bill-of-materials () :
  export-bom()
