; Generated by JITX {JITX-VERSION}
#use-added-syntax(jitx)
defpackage main :
  import core
  import jitx
  import jitx/commands
  import jitx/parts

  import helpers


; Define the shape/size of the board
val board-shape = RoundedRectangle(30.0, 18.5, 0.25)

pcb-module communications-core :
  name = "Networked MCU"

  inst zener : components/ON-Semiconductor/MMSZ4689T1G/component
  inst usb-if : connectors/components/USB/USBTypeC/USBC-HighSpeed-Iface(ResistorQuery(case = "0402"), CapacitorQuery(case = "0402"))
  net (zener.A zener.K)

; Module to run as a design
pcb-module top-level :
  inst core : communications-core

; Set the :
;     design-name     - a directory with this name will be created in the "designs" directory
;     board           - a Board object representing the stackup, rules and board shape for a particular design
setup-design(
  "ethernet-io",
  ocdb/utils/defaults/default-board(ocdb/manufacturers/stackups/jlcpcb-jlc2313, board-shape)
)

; Set the top level module (the module to be compile into a schematic and PCB)
set-main-module(top-level)

; View the results
; take a look at the BOM that was generated
view-bom(BOM-STD)
; examine the schematic that was auto-generated
view-schematic()
; view the board that was created
view-board()